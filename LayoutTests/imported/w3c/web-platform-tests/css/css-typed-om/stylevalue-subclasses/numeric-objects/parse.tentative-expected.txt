
FAIL Parsing an invalid string throws SyntaxError assert_throws_dom: function "() => CSSNumericValue.parse('%#(')" threw object "TypeError: CSSNumericValue.parse('%# is not a function. (In 'CSSNumericValue.parse('%#(')', 'CSSNumericValue.parse('%#' is undefined)" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
FAIL Parsing a string with a non numeric token throws SyntaxError assert_throws_dom: function "() => CSSNumericValue.parse('auto')" threw object "TypeError: CSSNumericValue.parse is not a function. (In 'CSSNumericValue.parse('auto')', 'CSSNumericValue.parse' is undefined)" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
FAIL Parsing a string with left over numeric tokens throws SyntaxError assert_throws_dom: function "() => CSSNumericValue.parse('1 2')" threw object "TypeError: CSSNumericValue.parse is not a function. (In 'CSSNumericValue.parse('1 2')', 'CSSNumericValue.parse' is undefined)" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
FAIL Parsing a calc with incompatible units throws a SyntaxError assert_throws_dom: function "() => CSSNumericValue.parse('calc(calc(1px * 2s) + 3%)')" threw object "TypeError: CSSNumericValue.parse is not a function. (In 'CSSNumericValue.parse('calc(calc(1px * 2s) + 3%)')', 'CSSNumericValue.parse' is undefined)" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
FAIL Parsing ignores surrounding spaces CSSNumericValue.parse is not a function. (In 'CSSNumericValue.parse(' 1px  ')', 'CSSNumericValue.parse' is undefined)
FAIL Parsing min() is successful Can't find variable: CSSMathMin
FAIL Parsing max() is successful Can't find variable: CSSMathMax
FAIL Parsing clamp() is successful Can't find variable: CSSMathMax

